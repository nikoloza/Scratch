/**
 * `transform` mixin - to use multiple transforms.
 * @param {string} property
 * @example
 * .transform(translate(100px, 200px) skewX(10deg))
 */
.transform(@property) {
  -webkit-transform: @property;
     -moz-transform: @property;
      -ms-transform: @property;
       -o-transform: @property;
          transform: @property;
}

/**
 * `transform-origin` mixin
 * @param {string} property
 * @example
 * .transform-origin(40% 60%)
 */
.transform-origin(@property) {
  -webkit-transform-origin: @property;
     -moz-transform-origin: @property;
      -ms-transform-origin: @property;
       -o-transform-origin: @property;
          transform-origin: @property;
}

/**
 * transform: `translate`
 * @param {string} [x=-50%]
 * @param {string} [y=-50%]
 * @example
 * .translate(100px, 200px)
 */
.translate(@x: -50%, @y: -50%) {
  -webkit-transform: translate(@x, @y);
     -moz-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y);
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}

/**
 * transform: `translateX`
 * @param {string} [x=-50%]
 * @example
 * .translateX(100px)
 */
.translateX(@x: -50%) {
  -webkit-transform: translateX(@x);
     -moz-transform: translateX(@x);
      -ms-transform: translateX(@x);
       -o-transform: translateX(@x);
          transform: translateX(@x);
}

/**
 * transform: `translateY`
 * @param {string} [y=-50%]
 * @example
 * .translateY(200px)
 */
.translateY(@y: -50%) {
  -webkit-transform: translateY(@y);
     -moz-transform: translateY(@y);
      -ms-transform: translateY(@y);
       -o-transform: translateY(@y);
          transform: translateY(@y);
}

/**
 * transform: `translateZ`
 * @param {string} [z=0]
 * @example
 * .translateZ(2)
 */
.translateZ(@z: 0) {
  -webkit-transform: translateZ(@z);
     -moz-transform: translateZ(@z);
      -ms-transform: translateZ(@z);
       -o-transform: translateZ(@z);
          transform: translateZ(@z);
}

/**
 * transform: `translate3s`
 * @param {string} [x=-50%]
 * @param {string} [y=-50%]
 * @param {string} [z=0]
 * @example
 * .translate(100px, 200px, 2)
 */
.translate3d(@z: -50%, @y: -50%, @z: 0) {
  -webkit-transform: translate3d(@z, @y, @z);
     -moz-transform: translate3d(@z, @y, @z);
      -ms-transform: translate3d(@z, @y, @z);
       -o-transform: translate3d(@z, @y, @z);
          transform: translate3d(@z, @y, @z);
}

/**
 * transform: `rotate`
 * @param {string} [property=50deg]
 * @example
 * .rotate(45deg)
 */
.rotate(@property: 90deg) {
  -webkit-transform: rotate(@property);
      -ms-transform: rotate(@property);
          transform: rotate(@property);
}

/**
 * transform: `scale`
 * @param {number} [x=1]
 * @param {number} [y=1]
 * @example
 * .scale(150% 150%)
 */
.scale(@x: 1, @y: 1) {
  -webkit-transform: scale(@x, @y);
      -ms-transform: scale(@x, @y);
          transform: scale(@x, @y);
}

/**
 * transform: `skew`
 * @param {string} x
 * @param {string} y
 * @example
 * .skew(15deg 25deg)
 */
.skew(@x, @y) {
  -webkit-transform: skew(@x, @y);
      -ms-transform: skew(@x, @y);
          transform: skew(@x, @y);
}

/**
 * transform: `skewX`
 * @param {string} x
 * @example
 * .skewX(15deg)
 */
.skewX(@x) {
  -webkit-transform: skewX(@x);
      -ms-transform: skewX(@x);
          transform: skewX(@x);
}

/**
 * transform: `skewY`
 * @param {string} y
 * @example
 * .skewY(25deg)
 */
.skewY(@y) {
  -webkit-transform: skewY(@y);
      -ms-transform: skewY(@y);
          transform: skewY(@y);
}

/**
 * transform: `matrix` - combines all 2d transforms
 * @param {string} a
 * @param {string} b
 * @param {string} c
 * @param {string} d
 * @param {string} e
 * @param {string} f
 * @example
 * .matrix(1, -0.3, 0, 1, 0, 0)
 */
.matrix(@a, @b, @c, @d, @e, @f) {
  -webkit-transform: matrix(@a, @b, @c, @d, @e, @f);
      -ms-transform: matrix(@a, @b, @c, @d, @e, @f);
          transform: matrix(@a, @b, @c, @d, @e, @f);
}